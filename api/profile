// -*-C++-*-
// This file is a part of the IncludeOS unikernel - www.includeos.org
//
// Copyright 2015 Oslo and Akershus University College of Applied Sciences
// and Alfred Bratterud
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once
#ifndef API_PROFILE_HEADER
#define API_PROFILE_HEADER

#include <cstdint>
#include <string>
#include <vector>

struct Sample {
  uint32_t    samp; // samples
  void*       addr; // function address
  std::string name; // function name
};

struct StackSampler
{
  // sets up stack sampling configuration and internal timer
  // the stack sampling will happen in the background afterwards
  static void begin();
  
  // total number of waking samples taken
  static uint64_t samples_total();
  
  // total number of samples taken while asleep
  static uint64_t samples_asleep();
  
  // retrieve N top results/hotspots
  static std::vector<Sample> results(int N);
  
  // enable or disable sample-taking
  // eg. disable sampling during stack sample result printout
  static void set_mask(bool);
};

extern "C" {
  // print memory usage changes over time
  extern void print_heap_info();
  // used to validate that the backtrace is not corrupt
  extern void __validate_backtrace(char const* where, unsigned id = 0);
}

#endif
